/*
! SOURCE : w3schools

? git version
* untuk mengecek versi dari git

? git config --global user.name "nama"
* untuk mengatur nama

? git config --global user.email "email"
* untuk mengatur email

? git init
* untuk membuatkan repository baru

? git status
* untuk menampilkan status

? git add
* untuk menambahkan file ke staging area

? git add -A atau -all
* untuk menambahkan semua file ke staging area

? git commit -m "pesan commit"
* untuk mengirim pesan commit

? git status --short
* untuk menampilkan status dengan format yang lebih ringan / lebih sedikit

? git commit -a -m "pesan commit"
* untuk mengirim commit dengan menambahkan semua file yang sudah diubah

? git log
* untuk menampilkan log

? git log --oneline
* untuk menampilkan log dengan format yang lebih ringan

? git command -help
* untuk menampilkan bantuan dari command yang spesifik

? git help --all
* untuk menampilkan bantuan dari semua command

! Branch di git
* Branch adalah salinan dari kode yang memungkinkan Anda untuk bekerja secara independen dari cabang utama (main branch). Dengan menggunakan branch, Anda dapat mengembangkan fitur baru, memperbaiki bug, atau bereksperimen dengan ide-ide baru tanpa mempengaruhi kode yang ada di cabang utama. Setelah selesai bekerja di branch, Anda dapat menggabungkannya kembali ke cabang utama dengan menggunakan merge. Branch sangat berguna dalam pengembangan kolaboratif karena memungkinkan beberapa pengembang bekerja pada fitur yang berbeda secara bersamaan tanpa mengganggu satu sama lain.

? git branch
* untuk menampilkan branch

? git add branch
* untuk menambahkan branch

? git checkout branch-name
* untuk mengganti branch

? git merge branch-name
* untuk menggabungkan branch

? git branch -d branch-name
* untuk menghapus branch

*====================================================*
! Git & GitHub
? git remote add origin "url"
* untuk menambahkan remote repository dari github

? git push --set-upstream origin master
* untuk mengirim commit dari local ke github

? git fetch origin
* untuk mengambil data dari remote repository ke local tanpa menggabungkannya

? git diff origin/master
* melihat perbedaan local & remote (GitHub)

? git merge origin/master
* untuk menggabungkan remote repository ke local

? git pull origin
* untuk mengambil commit dari github ke local

? git push origin
* untuk mengirim commit dari local ke github

*/

/* 
! STEP-STEP MENGGUNAKAN GIT DENGAN LOCAL REPOSITORY
1. buat folder
2. tambahkan file
3. git init // ? untuk membuatkan repository baru
4. git add fileName.extension // ? untuk menambahkan file ke staging area
5. git commit -a -m "pesan commit" // ? untuk mengirim commit dengan menambahkan semua file yang sudah diubah
6. git status // ? untuk menampilkan status
7. git log // ? untuk menampilkan log
8. git branch branch-name // ? untuk menambahkan branch
9. git checkout -b branch-name // ? untuk mengganti branch
10. git merge branch-name // ? untuk menggabungkan branch
11. git branch -d branch-name // ? untuk menghapus branch

*=====================================================*

! STEP-STEP MENGGUNAKAN GIT DENGAN GITHUB
1. membuat repository baru di github
2. git push --set-upstream origin master // ? untuk mengirim commit dari local ke github
3. git remote add origin "url" // ? untuk menambahkan remote repository dari github
4. git fetch origin // ? untuk mengambil data dari remote repository ke local tanpa menggabungkannya
5. git diff origin/master // ? melihat perbedaan local & remote (GitHub)
6. git merge origin/master // ? untuk menggabungkan remote repository ke local
7. git pull origin // ? untuk mengambil commit dari github ke local
8. git push origin // ? untuk mengirim commit dari local ke github

! ADA YANG HABIS DI EDIT FILENYA DARI LOCAL?
1. git commit -a -m "pesan commit" // ? untuk mengirim commit dengan menambahkan semua file yang sudah diubah
2. git push origin // ? untuk mengirim commit dari local ke github

! FILE HABIS DI EDIT DARI GITHUB?
1. git pull origin // ? untuk mengambil commit dari github ke local
2. git branch -a // ? untuk menampilkan semua branch
3. git checkout branch-name // ? untuk mengganti branch
4. git commit -a -m "pesan commit" // ? untuk mengirim commit

! MAU UPDATE FILE DARI BRANCH GITHUB LAIN?
1. git checkout branch-name // ? untuk mengganti branch (ke branch-baru)
2. git pull // ? untuk mengambil commit dari github ke local
3. git merge origin/branch-name // ? untuk menggabungkan branch (branch-baru -> branch-master)
4. git push origin master // ? untuk mengirim commit dari local ke github
*/
